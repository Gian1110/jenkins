@Library('jenkins-libs') _
pipeline {
  agent any
 parameters {
    
    //server values
        string(name: 'remoteHost', defaultValue: '192.168.100.173', description: 'dns o ip del host')
        string(name: 'imagenver', defaultValue: 'latest', description: 'version de la applicacion')
        
    }
    environment {
        //path app
        path="./dockerweb-multiserver"
      

        // container values
        name_container = 'proyecto-qa'
        name_imagen_origen = 'iproyecto-qa'
        puerto_imagen = '81'
        name_imagen = "192.168.100.173:5000/iproyecto-qa:latest"   

    }
    stages {

        // stage('build and push') {
        //     steps {
        //         script{
        //             def parameterMap = [:]
        //             parameterMap["path"] = path
        //             parameterMap["nameContainer"] = name_container
        //             dockerBuildandPush(parameterMap);
        //             }
                    
        //         }                    
                                  
        //     }
        stage('build') {
            steps {
                script{
                    sh "docker build -t ${name_imagen} dockerweb-multiserver/"
    
                    }
                    
                }                    
                                  
            }
            stage('push') {
            steps {
                script{
                    
                    sh "docker push ${name_imagen}"
                 
    
                    }
                    
                }                    
                                  
            }

            stage('rmi') {
            steps {
                script{
                    
                   
                    sh "docker rmi ${name_imagen}"
    
                    }
                    
                }                    
                                  
            }
        stage('ssh pull') {
            steps {
                script{
                        def parameterMap = [:]
                        parameterMap["remoteHost"] = params.remoteHost
                        parameterMap["nameContainer"] = name_container
                        parameterMap["versionImagen"] = imagenver
                        dockerb.dockerPull(parameterMap);
                            
                    }
                    
                }  
            
            }

        stage('ssh rm and run') {
            steps {
                script{

                    def parameterMap = [:]
                    parameterMap["remoteHost"] = params.remoteHost
                    parameterMap["nameContainer"] = name_container
                    parameterMap["puertoContainer"] = puerto_imagen
                    dockerb.dockerRmRun(parameterMap);
                    
                    }
                }  
            
            }
        }

    }
